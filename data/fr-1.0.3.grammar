@grammar 

#include fr-1.0.3.rhetoric.grammar

/* **************************************************
 * Start with an NP or a Narative Sentence
 ************************************************** */
text → rhetoricalStructure {
  [PRED:$pred, vform:$vform, mode:$mode, illocutionary:$illocutionary, modality:$modality, language_register:$language_register, lexFct:$lexFct] ⊂ ↑;
  if (!$vform)
    $vform = tensed;
  if (!$mode)
    $mode = indicative;
  if (!$language_register)
    $language_register = neutral;
  if (!$lexFct)
    $lexFct = none;
  if (($pred != cause) && ($pred != succ) && ($pred != hello) && ($pred != see_you_soon))
    $rhet = neutral;
  else
    $rhet = $pred;
  if (!$illocutionary)
    $illocutionary = neutral;
  if (!$modality)
    $modality = neutral;
  ↓1 = ↑ ∪ [vform:$vform, mode:$mode, rhet:$rhet, illocutionary:$illocutionary, modality:$modality, language_register:$language_register, lexFct:$lexFct];
  ⇑ = [];
}

/* **************************************************
 ************************************************** */
paragraph → texts {
  [PRED:paragraph, $rest];
  ↓1 = $rest;
  ⇑ = [];
}

/* **************************************************
 ************************************************** */
texts → text texts {
  [texts:<$head::$tail>];
  ↓1 = $head;
  ↓2 = [texts:$tail];
  ⇑ = [];
}

texts → {
  [texts:NIL];
  ⇑ = [];
}

/* **************************************************
 * Greetings, hello, etc
 ************************************************** */
letter → dear name comma newParagraph text newParagraph regards newline signature {
  [PRED:letter, i:$i, ii:$ii, iii:$iii];
  [PRED:$pred, vform:$vform, mode:$mode, illocutionary:$illocutionary, modality:$modality, language_register:$language_register, lexFct:$lexFct] ⊂ ↑;
  if (!$vform)
    $vform = tensed;
  if (!$mode)
    $mode = indicative;
  if (!$language_register)
    $language_register = neutral;
  if (!$lexFct)
    $lexFct = none;
  if (($pred != cause) && ($pred != succ))
    $rhet = neutral;
  else
    $rhet = $pred;
  if (!$illocutionary)
    $illocutionary = neutral;
  if (!$modality)
    $modality = neutral;
  ↓1 = $i;
  ↓2 = $i;
  ↓3 = [];
  ↓4 = [];
  ↓5 = $ii ∪ [vform:$vform, mode:$mode, language_register:$language_register, lexFct:$lexFct, rhet:$rhet, illocutionary:$illocutionary, modality:$modality];
  ↓6 = [];
  ↓7 = [];
  ↓8 = [];
  ↓9 = $iii;
}

/* **************************************************
 ************************************************** */
text → text text [text] [text] [text] [text] [text] [text] [text] [text] {
  [PRED:succ,
   i:$i,
   ii:$ii,
   iii:$iii,
   iv:$iv,
   v:$v,
   vi:$vi,
   vii:$vii,
   viii:$viii,
   ix:$ix,
   x:$x];
  ↓1 = $i;
  ↓2 = $ii;
  if ($iii) {
    attest #3;
    ↓3 = $iii;
  }
    if ($iv) {
    attest #4;
    ↓4 = $iv;
  }
  if ($v) {
    attest #5;
    ↓5 = $v;
  }
  if ($vi) {
    attest #6;
    ↓6 = $vi;
  }
  if ($vii) {
    attest #7;
    ↓7 = $vii;
  }
  if ($viii) {
    attest #8;
    ↓8 = $viii;
  }
  if ($ix) {
    attest #9;
    ↓9 = $ix;
  }
  if ($x) {
    attest #10;
    ↓10 = $x;
  }
}

